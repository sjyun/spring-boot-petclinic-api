buildscript {
    ext {
        springBootVersion = '1.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'war'



task createProjectFolder{
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each {it.mkdirs()}
    def webappDir = "$rootDir/src/main/webapp"
    sourceSets*.groovy.srcDirs*.each { it.mkdirs() }
}




war {
    baseName = 'spring-boot-petclinic-api'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    /* Bare minumum to get started with Spring Data REST */
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.hsqldb:hsqldb:2.3.2")
    /* Required to make use of JODA  */
    compile("joda-time:joda-time:2.4")
    compile("org.jadira.usertype:usertype.jodatime:2.0.1")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.2");
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile("org.springframework.boot:spring-boot-starter-test")

    compile localGroovy()
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}
